// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package huaweicloudimport

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName       *string           `mapstructure:"packer_build_name" cty:"packer_build_name" hcl:"packer_build_name"`
	PackerBuilderType     *string           `mapstructure:"packer_builder_type" cty:"packer_builder_type" hcl:"packer_builder_type"`
	PackerCoreVersion     *string           `mapstructure:"packer_core_version" cty:"packer_core_version" hcl:"packer_core_version"`
	PackerDebug           *bool             `mapstructure:"packer_debug" cty:"packer_debug" hcl:"packer_debug"`
	PackerForce           *bool             `mapstructure:"packer_force" cty:"packer_force" hcl:"packer_force"`
	PackerOnError         *string           `mapstructure:"packer_on_error" cty:"packer_on_error" hcl:"packer_on_error"`
	PackerUserVars        map[string]string `mapstructure:"packer_user_variables" cty:"packer_user_variables" hcl:"packer_user_variables"`
	PackerSensitiveVars   []string          `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables" hcl:"packer_sensitive_variables"`
	AccessKey             *string           `mapstructure:"access_key" required:"true" cty:"access_key" hcl:"access_key"`
	SecretKey             *string           `mapstructure:"secret_key" required:"true" cty:"secret_key" hcl:"secret_key"`
	Region                *string           `mapstructure:"region" required:"true" cty:"region" hcl:"region"`
	ProjectName           *string           `mapstructure:"project_name" required:"false" cty:"project_name" hcl:"project_name"`
	ProjectID             *string           `mapstructure:"project_id" required:"false" cty:"project_id" hcl:"project_id"`
	SecurityToken         *string           `mapstructure:"security_token" required:"false" cty:"security_token" hcl:"security_token"`
	IdentityEndpoint      *string           `mapstructure:"auth_url" required:"false" cty:"auth_url" hcl:"auth_url"`
	Insecure              *bool             `mapstructure:"insecure" required:"false" cty:"insecure" hcl:"insecure"`
	Cloud                 *string           `cty:"cloud" hcl:"cloud"`
	OBSBucket             *string           `mapstructure:"obs_bucket_name" required:"true" cty:"obs_bucket_name" hcl:"obs_bucket_name"`
	OBSObject             *string           `mapstructure:"obs_object_name" required:"false" cty:"obs_object_name" hcl:"obs_object_name"`
	ImageName             *string           `mapstructure:"image_name" required:"true" cty:"image_name" hcl:"image_name"`
	OsVersion             *string           `mapstructure:"image_os_version" required:"true" cty:"image_os_version" hcl:"image_os_version"`
	MinDisk               *int              `mapstructure:"min_disk" required:"true" cty:"min_disk" hcl:"min_disk"`
	Format                *string           `mapstructure:"format" required:"true" cty:"format" hcl:"format"`
	ImageDescription      *string           `mapstructure:"image_description" required:"false" cty:"image_description" hcl:"image_description"`
	ImageType             *string           `mapstructure:"image_type" required:"false" cty:"image_type" hcl:"image_type"`
	ImageTags             map[string]string `mapstructure:"image_tags" required:"false" cty:"image_tags" hcl:"image_tags"`
	ImageArchitecture     *string           `mapstructure:"image_architecture" required:"false" cty:"image_architecture" hcl:"image_architecture"`
	EnterpriseProjectId   *string           `mapstructure:"enterprise_project_id" required:"false" cty:"enterprise_project_id" hcl:"enterprise_project_id"`
	SkipClean             *bool             `mapstructure:"skip_clean" required:"false" cty:"skip_clean" hcl:"skip_clean"`
	WaitImageReadyTimeout *string           `mapstructure:"wait_image_ready_timeout" required:"false" cty:"wait_image_ready_timeout" hcl:"wait_image_ready_timeout"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatConfig)
}

// HCL2Spec returns the hcl spec of a Config.
// This spec is used by HCL to read the fields of Config.
// The decoded values from this spec will then be applied to a FlatConfig.
func (*FlatConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"packer_build_name":          &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"packer_builder_type":        &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"packer_core_version":        &hcldec.AttrSpec{Name: "packer_core_version", Type: cty.String, Required: false},
		"packer_debug":               &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"packer_force":               &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"packer_on_error":            &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"packer_user_variables":      &hcldec.AttrSpec{Name: "packer_user_variables", Type: cty.Map(cty.String), Required: false},
		"packer_sensitive_variables": &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"access_key":                 &hcldec.AttrSpec{Name: "access_key", Type: cty.String, Required: false},
		"secret_key":                 &hcldec.AttrSpec{Name: "secret_key", Type: cty.String, Required: false},
		"region":                     &hcldec.AttrSpec{Name: "region", Type: cty.String, Required: false},
		"project_name":               &hcldec.AttrSpec{Name: "project_name", Type: cty.String, Required: false},
		"project_id":                 &hcldec.AttrSpec{Name: "project_id", Type: cty.String, Required: false},
		"security_token":             &hcldec.AttrSpec{Name: "security_token", Type: cty.String, Required: false},
		"auth_url":                   &hcldec.AttrSpec{Name: "auth_url", Type: cty.String, Required: false},
		"insecure":                   &hcldec.AttrSpec{Name: "insecure", Type: cty.Bool, Required: false},
		"cloud":                      &hcldec.AttrSpec{Name: "cloud", Type: cty.String, Required: false},
		"obs_bucket_name":            &hcldec.AttrSpec{Name: "obs_bucket_name", Type: cty.String, Required: false},
		"obs_object_name":            &hcldec.AttrSpec{Name: "obs_object_name", Type: cty.String, Required: false},
		"image_name":                 &hcldec.AttrSpec{Name: "image_name", Type: cty.String, Required: false},
		"image_os_version":           &hcldec.AttrSpec{Name: "image_os_version", Type: cty.String, Required: false},
		"min_disk":                   &hcldec.AttrSpec{Name: "min_disk", Type: cty.Number, Required: false},
		"format":                     &hcldec.AttrSpec{Name: "format", Type: cty.String, Required: false},
		"image_description":          &hcldec.AttrSpec{Name: "image_description", Type: cty.String, Required: false},
		"image_type":                 &hcldec.AttrSpec{Name: "image_type", Type: cty.String, Required: false},
		"image_tags":                 &hcldec.AttrSpec{Name: "image_tags", Type: cty.Map(cty.String), Required: false},
		"image_architecture":         &hcldec.AttrSpec{Name: "image_architecture", Type: cty.String, Required: false},
		"enterprise_project_id":      &hcldec.AttrSpec{Name: "enterprise_project_id", Type: cty.String, Required: false},
		"skip_clean":                 &hcldec.AttrSpec{Name: "skip_clean", Type: cty.Bool, Required: false},
		"wait_image_ready_timeout":   &hcldec.AttrSpec{Name: "wait_image_ready_timeout", Type: cty.String, Required: false},
	}
	return s
}
